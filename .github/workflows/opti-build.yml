on:
  push:
    branches:
      - "optimize-build-action"
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: booleanSkip this and set up a workfl

jobs:
  build_linux_releases:
    runs-on: ubuntu-22.04
    name: Build 
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VERSION: ${{ github.ref_name }}
      MESSAGE: "WIP"
      FILES: hetzner-k3s-${{ matrix.binary_os_suffix }}-${{ matrix.binary_arch_suffix }}
    
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: alpine_latest
            binary_os_suffix: linux
            binary_arch_suffix: amd64
          - arch: none
            distro: none
            base_image: amd64/alpine
            binary_os_suffix: linux
            binary_arch_suffix: amd64
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Build arm64 binary
        id: runcmd
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          base_image:  ${{ matrix.base_image }}
          
          shell: /bin/sh
          
          install: |
            case "${{ matrix.distro }} || ${{ matrix.base_image }}" in
              alpine*)
                apk update
                apk add --update --no-cache gcc gmp-dev libevent-static musl-dev pcre-dev pcre2-dev libxml2-dev \
                  libxml2-static openssl-dev openssl-libs-static tzdata yaml-static zlib-static xz-static \
                  make git autoconf automake libtool patch
                apk add --update --no-cache libssh2-static libssh2-dev crystal shards github-cli
                ;;
            esac
          
          run: |
            shards install --without-development
            shards build --without-development --release --static
            cp ./bin/hetzner-k3s ${{ env.FILES }}
            git config --global --add safe.directory /home/runner/work/hetzner-k3s/hetzner-k3s
            
      - name: Publish new version
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ env.GITHUB_TOKEN }}
          file: ${{ env.FILES }}
          tag: ${{ env.VERSION }}
          overwrite: true
          body: ${{ env.MESSAGE }}
